mod sample;
mod finite_field;


use crate::sample as samp;
use crate::finite_field as ff;


fn main() {


    let inv_of_2 = ff::inv(0x2);
    println!("The inverse of 2 is: {}", inv_of_2);
    

    let four_mult_nine = ff::mul(0x4, 0x9);
    println!("4 * 9 = {}", four_mult_nine);

    let mut b = vec![
        vec![0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x4, 0x2], 
        vec![0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2], 
        vec![0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2],
        vec![0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2],  
    ];

    samp::print_matrix(b.clone());

    b = samp::echelon_form(b, 2, 4);

    println!("Echelon form");
    samp::print_matrix(b.clone());




    
}